name: Deploy Javadoc

on:
  push:
    branches:
      - javadoc
      - enable-javadoc-api
  workflow_run:
    workflows: ["Java CI with Maven"]
    types:
      - completed

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Step 0: Get project version
      - name: Get project version
        id: get_version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java (required for building and generating Javadoc)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      # Step 3: Build and generate Javadoc
      - name: Build project and generate Javadoc
        run: |
          mvn clean install   # Clean and build the project
          mvn javadoc:javadoc # Generate Javadoc

      # Step 4: Deploy Javadoc to GitHub Pages
      - name: Deploy JavaDoc ðŸš€
        uses: MathieuSoysal/Javadoc-publisher.yml@v2.4.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          java-version: 22
          javadoc-branch: javadoc
          java-distribution: temurin
          project: maven
          # url will be https://<username>.github.io/<repo>/<target-folder>
          # update this to the project version number
          target-folder: ${{ steps.get_version.outputs.version }}

      # Step 5: Generate index.html in the javadoc branch root
      - name: Generate index.html for all versions
        run: |
          git fetch origin javadoc:javadoc
          git checkout javadoc
          # Generate index.html listing all version folders
          echo '<!DOCTYPE html>
          <html><head><meta charset="utf-8"><title>Robot Overlord Documentation Versions</title></head>
          <body><h1>Available Robot Overlord Documentation Versions</h1><ul>' > index.html
          for dir in $(find . -maxdepth 1 -type d ! -name '.' ! -name 'assets' ! -name 'static'); do
            version=$(basename "$dir")
            [[ "$version" =~ ^[0-9]+\.[0-9]+(\.[0-9]+)?$ ]] || continue
            echo "<li><a href=\"$version/\">$version</a></li>" >> index.html
          done
          echo '</ul></body></html>' >> index.html
          git add index.html
          git commit -m "Update index.html for Javadoc versions" || echo "No changes to commit"
          git push origin javadoc